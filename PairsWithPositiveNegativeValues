package practice.com.src.arrays;

import java.util.ArrayList;                                         //Time Complexity: O(n)
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import java.util.Map.Entry;

public class PairsWithPositiveNegativeValues {
	public static void main(String args[]) {
	int[] inputArray = {1,-3,2,3,6,-1};
	int[] inputArray1 = {4,8,9,-4,1,-1,-8,-9};
	List<Integer> out = ContiguousMaxSameSubarrayMethod(inputArray);
		for (int k = 0; k < out.size(); k++) {
			System.out.print("-"+out.get(k)+ " ");
			System.out.print(out.get(k)+ " ");
		}
	}
	
	
	public static List<Integer> ContiguousMaxSameSubarrayMethod(int[] input) {
		List<Integer> result = new ArrayList<>();
		Map<Integer,Integer> map = new HashMap<>();
		for(int i = 0;i<input.length;i++){
			if(map.containsKey(Math.abs(input[i]))){
				map.put(Math.abs(input[i]),map.get(Math.abs(input[i]))+1);
			}
			else{
				map.put(Math.abs(input[i]),1);
			}
		}
		System.out.println(map);
		for(Entry entry:map.entrySet()){
			if((Integer)entry.getValue() > 1){
				result.add((Integer)entry.getKey());
			}
		}
		return result;
	}

}

